# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ys8YSGKoRxZDVNGOPd9JJfizz3yO8feG
"""

!pip install flask-ngrok keras keras-applications --quiet

from flask import Flask, render_template_string, request
from flask_ngrok import run_with_ngrok

from keras.preprocessing.image import load_img, img_to_array
from keras.applications.resnet50 import preprocess_input, decode_predictions, ResNet50
import os

app = Flask(__name__)
run_with_ngrok(app)  # Use ngrok to run the app in Colab

model = ResNet50(weights='imagenet')

HTML_TEMPLATE = '''
<!doctype html>
<title>Image Classification</title>
<h1>Upload an image for prediction</h1>
<form method=post enctype=multipart/form-data>
  <input type=file name=imagefile>
  <input type=submit value=Upload>
</form>
{% if prediction %}
  <h2>Prediction: {{ prediction }}</h2>
{% endif %}
'''

@app.route('/', methods=['GET', 'POST'])
def index():
    prediction = None
    if request.method == 'POST':
        imagefile = request.files['imagefile']
        filepath = os.path.join('/tmp', imagefile.filename)
        imagefile.save(filepath)

        image = load_img(filepath, target_size=(224, 224))
        image = img_to_array(image)
        image = image.reshape((1, 224, 224, 3))
        image = preprocess_input(image)
        yhat = model.predict(image)
        label = decode_predictions(yhat)
        label = label[0][0]
        prediction = '%s (%.2f%%)' % (label[1], label[2] * 100)

    return render_template_string(HTML_TEMPLATE, prediction=prediction)

app.run()